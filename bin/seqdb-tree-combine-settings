#! /usr/bin/env python3
# -*- Python -*-

"""Combines settings and tree into a single file for drawing signature page."""

import sys, traceback
if sys.version_info.major != 3: raise RuntimeError("Run script with python3")
from pathlib import Path
sys.path[:0] = [str(Path(sys.argv[0]).resolve().parents[1].joinpath("dist")), str(Path(sys.argv[0]).resolve().parents[1].joinpath("python"))]
import logging; module_logger = logging.getLogger(__name__)

from seqdb import json

# ----------------------------------------------------------------------

def main(args):
    settings = json.loadf(args.settings[0])
    for k in ["antigenic_maps", "clades", "legend", "signature_page", "title", "tree"]:
        if k not in settings:
            raise RuntimeError("Invalid settings, \"{}\" absent".format(k))
    tree = json.loadf(args.tree[0])
    tree["settings"] = settings
    json.dumpf(args.output[0], tree, indent=args.indent)

# ----------------------------------------------------------------------

try:
    import argparse
    # print(" ".join(repr(a) for a in sys.argv))
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument('-d', '--debug', action='store_const', dest='loglevel', const=logging.DEBUG, default=logging.INFO, help='Enable debugging output.')

    parser.add_argument('settings', nargs=1, help='settings.json.')
    parser.add_argument('tree', nargs=1, help='input-tree.json.')
    parser.add_argument('output', nargs=1, help='output.json.')
    parser.add_argument('-i', '--indent', action='store', type=int, dest='indent', default=1, help='Indent level.')

    args = parser.parse_args()
    logging.basicConfig(level=args.loglevel, format="%(levelname)s %(asctime)s: %(message)s")
    exit_code = main(args)
except Exception as err:
    logging.error('{}\n{}'.format(err, traceback.format_exc()))
    exit_code = 1
exit(exit_code)

# ======================================================================
### Local Variables:
### eval: (if (fboundp 'eu-rename-buffer) (eu-rename-buffer))
### End:
