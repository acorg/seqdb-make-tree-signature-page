#! /usr/bin/env python3
# -*- Python -*-

import sys, traceback
if sys.version_info.major != 3: raise RuntimeError("Run script with python3")
from pathlib import Path
sys.path[:0] = [str(Path(sys.argv[0]).resolve().parents[1].joinpath("dist")), str(Path(sys.argv[0]).resolve().parents[1].joinpath("python"))]
import logging; module_logger = logging.getLogger(__name__)

import seqdb
from seqdb import open_file

# ----------------------------------------------------------------------

sVaccines = {
    "A(H3N2)": [
        # 'TEXAS/50/2012 {CELL} {WILDTYPE}' blue
        # 'SWITZERLAND/9715293/2013 {CELL} {WILDTYPE}' blue
        # "HONG KONG/4801/2014 {EGG} {WILDTYPE}" red
        # "HONG KONG/4801/2014 cell" red
        # 'HONG KONG/4801/2014 NYMC-263A' green
        # "SAITAMA/103/2014" pink niid
        # "HONG KONG/7295/2014" pink nimr

        # fake, for debugging purposes
        {"id": "A(H3N2)/SWITZERLAND/15983141/2015", "label": ""},
        ],
    "A(H1N1)": [
        # 'CALIFORNIA/7/2009 {CELL} -> egg' red
        # 'CALIFORNIA/7/2009 NYMC-179A' green
        ],
    "BVIC": [
        # 'MALAYSIA/2506/2004 {EGG} {WILDTYPE}' blue
        # 'BRISBANE/60/2008 {CELL} {WILDTYPE}' red
        # 'PARIS/1762/2009 {CELL} {WILDTYPE}' red nimr
        # 'B/SOUTH AUSTRALIA/81/2012 {EGG}' 0x00FFFF
        ],
    "BYAM": [
        # 'MASSACHUSETTS/2/2012 {CELL} {WILDTYPE}' blue
        # 'MASSACHUSETTS/2/2012 {EGG} {WILDTYPE}' blue
        # 'B/PHUKET/3073/2013 {CELL} {WILDTYPE}' red
        # 'B/PHUKET/3073/2013 {EGG} {WILDTYPE}' green
        ],
    }

def mark_vaccines(tree):
    for vaccine_data in sVaccines[make_vt(tree)]:
        tree.add_vaccine(**vaccine_data)

# ----------------------------------------------------------------------

def make_vt(tree):
    vt = tree.virus_type()
    if vt == "B":
        vt += tree.lineage()[:3]
    return vt

# ----------------------------------------------------------------------

def main(args):
    tree = seqdb.import_tree(args.input[0])
    seq_db = seqdb.Seqdb()
    seq_db.load(filename=args.path_to_seqdb)
    tree.match_seqdb(seq_db)
    if args.ladderize:
        tree.ladderize()        # must be before clade_setup()
    tree.clade_setup()
    tree.make_aa_transitions()
    if args.hz_line_section_tolerance > 0:
        tree.make_hz_line_sections(args.hz_line_section_tolerance)
    mark_vaccines(tree)
    open_file.write_binary(filename=args.output[0], data=tree.json(indent=1).encode("utf-8"))

# ----------------------------------------------------------------------

with seqdb.timeit(sys.argv[0]):
    try:
        import argparse
        print(" ".join(repr(a) for a in sys.argv))
        parser = argparse.ArgumentParser(description=__doc__)
        parser.add_argument('-d', '--debug', action='store_const', dest='loglevel', const=logging.DEBUG, default=logging.INFO, help='Enable debugging output.')

        parser.add_argument('input', nargs=1, help='source tree.')
        parser.add_argument('output', nargs=1, help='output tree.')

        parser.add_argument('--no-ladderize', action='store_false', dest='ladderize', default=True, help='No ladderize the tree')

        parser.add_argument('--hz-line-section-tolerance', action='store', type=float, dest='hz_line_section_tolerance', default=0, help='')

        parser.add_argument('--db', action='store', dest='path_to_seqdb', required=True, help='Path to sequence database (to match tree leaves with seqdb entries).')
        # parser.add_argument('--email', action='store', dest='email', default="eu@antigenic-cartography.org", help='Email to report status of the tasks running in the cluster.')

        args = parser.parse_args()
        logging.basicConfig(level=args.loglevel, format="%(levelname)s %(asctime)s: %(message)s")
        exit_code = main(args)
    except Exception as err:
        logging.error('{}\n{}'.format(err, traceback.format_exc()))
        exit_code = 1
exit(exit_code)

# ======================================================================
### Local Variables:
### eval: (if (fboundp 'eu-rename-buffer) (eu-rename-buffer))
### End:
