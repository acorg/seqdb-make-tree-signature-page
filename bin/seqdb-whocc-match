#! /usr/bin/env python3
# -*- Python -*-

"""
Updates seqdb by matching with hidb names.
"""

import sys, os, traceback, pprint
if sys.version_info.major != 3: raise RuntimeError("Run script with python3")
from pathlib import Path
sys.path[:0] = [str(Path(sys.argv[0]).resolve().parents[1].joinpath("dist")), str(Path(sys.argv[0]).resolve().parents[1].joinpath("python"))]
import logging; module_logger = logging.getLogger(__name__)

from seqdb import whocc, timeit

# ----------------------------------------------------------------------

def main(args):
    whocc.match_hidb(
        seqdb_path=args.path_to_db,
        hidb_dir=Path(args.path_to_hidb).expanduser(),
        save_seqdb=args.save
        )

# ----------------------------------------------------------------------

with timeit(sys.argv[0]):
    try:
        import argparse
        parser = argparse.ArgumentParser(description=__doc__)
        parser.add_argument('-n', '--no-save', action='store_false', dest='save', default=True, help='Do not save resulting database.')
        # parser.add_argument('--gene', action='store', dest='default_gene', default="HA", help='default gene.')
        parser.add_argument('--db', action='store', dest='path_to_db', required=True, help='Path to sequence database.')
        parser.add_argument('--hidb', action='store', dest='path_to_hidb', default="~/WHO", help='Path to directory with the HiDb files.')
        parser.add_argument('-d', '--debug', action='store_const', dest='loglevel', const=logging.DEBUG, default=logging.INFO, help='Enable debugging output.')
        args = parser.parse_args()
        logging.basicConfig(level=args.loglevel, format="%(levelname)s %(asctime)s: %(message)s")
        exit_code = main(args)
    except Exception as err:
        logging.error('{}\n{}'.format(err, traceback.format_exc()))
        exit_code = 1
exit(exit_code)

# ======================================================================
### Local Variables:
### eval: (if (fboundp 'eu-rename-buffer) (eu-rename-buffer))
### End:
