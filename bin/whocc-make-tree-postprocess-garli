#! /usr/bin/env python3
# -*- Python -*-

"""
Postprocess data in the directories upon making tree via GH/ssm-report
"""

import sys
if sys.version_info.major != 3: raise RuntimeError("Run script with python3")
import traceback
from pathlib import Path
sys.path[:0] = [str(Path(sys.argv[0]).resolve().parents[1].joinpath("dist")), str(Path(sys.argv[0]).resolve().parents[1].joinpath("python"))]
import logging; module_logger = logging.getLogger(__name__)
from seqdb import make_tree, json, garli as garli_m

# ----------------------------------------------------------------------

def main(args):
    results_dir = Path(args.dir[0], "garli")
    if results_dir.is_dir():
        r_garli = garli_m.postprocess(target_dir=Path(args.dir[0]), source_dir=results_dir)
        results = make_tree.BasicRunner.make_results(raxml_results=, garli_results=r_garli, working_dir=Path(args.dir[0]), seqdb=args.path_to_seqdb)
    else:
        raise RuntimeError("No {}".format(results_dir))

# ----------------------------------------------------------------------

try:
    import argparse
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument('-d', '--debug', action='store_const', dest='loglevel', const=logging.DEBUG, default=logging.INFO, help='Enable debugging output.')

    parser.add_argument('dir', nargs=1, help='directory where tree data stored.')
    parser.add_argument('--db', action='store', dest='path_to_seqdb', default="/Users/eu/WHO/seqdb.json.xz", help='Path to sequence database.')

    args = parser.parse_args()
    logging.basicConfig(level=args.loglevel, format="%(levelname)s %(asctime)s: %(message)s")
    exit_code = main(args)
except Exception as err:
    logging.error('{}\n{}'.format(err, traceback.format_exc()))
    exit_code = 1
exit(exit_code)

# ======================================================================
### Local Variables:
### eval: (if (fboundp 'eu-rename-buffer) (eu-rename-buffer))
### End:
